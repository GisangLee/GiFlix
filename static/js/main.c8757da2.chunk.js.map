{"version":3,"sources":["assets/noMovie.jpg","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Season/SeasonPresenter.js","Routes/Season/index.js","Routes/Season/SeasonContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","upComing","popular","error","loading","Helmet","map","movie","key","poster_path","vote_average","release_date","API_KEY","LANGUAGE","api","axios","create","baseURL","moviesApi","get","params","api_key","language","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","console","log","React","Component","TVPresenter","topRated","airingToday","show","name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h2","ItemContainer","Divider","OverView","p","VideoContainer","VideoBtn","button","VideoLink","ProductionCompanyContainer","ProductCompany","ProductCompanyName","ProductCompnayImg","img","ProductCompanyTitle","h1","GotoSeasonContainer","GotoSeasonBtn","GotoSeason","DetailPresenter","result","usResult","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","href","videos","production_companies","company","src","logo_path","seasons","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","SeasonContainer","SeasonGrid","SeasonTitle","SeasonImage","SeasonName","SeasonItem","SeaonPresenter","season","air_date","over_view","episode_count","SeasonPresenter","path","exact","component","Home","TV","Search","Detail","Season","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8757da2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noMovie.1f01b880.jpg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 80px;\r\n  }\r\n`;\r\nconst Title = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 30px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const Loader = () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      🕥\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  margin: 20% auto;\r\n  color: ${(props) => props.color};\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTpyes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: urL(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 10px;\r\n  right: 8px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease-in-out;\r\n`;\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Year = styled.span`\r\n  color: rgba(255, 255, 255, 0.6);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    {\" \"}\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w500/${imageUrl}`\r\n              : require(\"../assets/noMovie.jpg\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            🏆\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 10 ? `${title.substring(0, 10)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTpyes.number.isRequired,\r\n  imageUrl: PropTpyes.string,\r\n  title: PropTpyes.string.isRequired,\r\n  rating: PropTpyes.number,\r\n  year: PropTpyes.string,\r\n  isMovie: PropTpyes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport { Loader } from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n  padding-top: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upComing, popular, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movie | GiFlix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"현재 상영 중인 영화\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.title}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upComing && upComing.length > 0 && (\r\n          <Section title=\"개봉 예정 영화\">\r\n            {upComing.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.title}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"인기 영화\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.title}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#c0392b\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upComing: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"058304e64877b12849e3924d90da607b\";\r\nconst LANGUAGE = {\r\n  korea: \"ko-KR\",\r\n  english: \"en-US\",\r\n};\r\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\r\n\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () =>\r\n    api.get(\"movie/now_playing\", {\r\n      params: {\r\n        api_key: API_KEY,\r\n        language: LANGUAGE.korea,\r\n      },\r\n    }),\r\n\r\n  upComing: () =>\r\n    api.get(\"movie/upcoming\", {\r\n      params: {\r\n        api_key: API_KEY,\r\n        language: LANGUAGE.korea,\r\n      },\r\n    }),\r\n\r\n  popular: () =>\r\n    api.get(\"movie/popular\", {\r\n      params: {\r\n        api_key: API_KEY,\r\n        language: LANGUAGE.korea,\r\n      },\r\n    }),\r\n\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        language: LANGUAGE.korea,\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  movieDetailUs: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        language: LANGUAGE.english,\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        api_key: API_KEY,\r\n        language: LANGUAGE.korea,\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () =>\r\n    api.get(\"tv/top_rated\", {\r\n      params: {\r\n        api_key: API_KEY,\r\n        language: LANGUAGE.korea,\r\n      },\r\n    }),\r\n  popular: () =>\r\n    api.get(\"tv/popular\", {\r\n      params: {\r\n        api_key: API_KEY,\r\n        language: LANGUAGE.korea,\r\n      },\r\n    }),\r\n  airingToday: () =>\r\n    api.get(\"tv/airing_today\", {\r\n      params: {\r\n        api_key: API_KEY,\r\n        language: LANGUAGE.korea,\r\n      },\r\n    }),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        language: LANGUAGE.korea,\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  showDetailUs: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        language: LANGUAGE.english,\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        api_key: API_KEY,\r\n        language: LANGUAGE.korea,\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upComing: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upComing },\r\n      } = await moviesApi.upComing();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n\r\n      this.setState({\r\n        nowPlaying,\r\n        upComing,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"영화정보를 받아올 수 없습니다.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n      console.log(\">>>영화 정보: \", this.state);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upComing={upComing}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport { Loader } from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, airingToday, popular, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV | GiFlix</title>\r\n    </Helmet>\r\n\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"믿고본다\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.name}\r\n                rating={show.vote_average}\r\n                isMovie={false}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"인기폭발\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.name}\r\n                rating={show.vote_average}\r\n                isMovie={false}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"현재 방영 중\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.name}\r\n                rating={show.vote_average}\r\n                isMovie={false}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#c0392b\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"TV 프로그램 정보를 받아올 수 없습니다.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, airingToday, popular, error, loading } = this.state;\r\n    console.log(this.state);\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        airingToday={airingToday}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #1e272e;\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  margin-left: 1rem;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  border-bottom: 2px solid\r\n    ${(props) => (props.current ? \"#ecf0f1\" : \"transparent\")};\r\n  transition: border-bottom 0.3s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">영화</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">검색</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport { Loader } from \"../../Components/Loader\";\r\nimport Section from \"../../Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  error,\r\n  loading,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | GiFlix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"영화/TV 프로그램을 검색하세요\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"영화 검색 결과\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.title}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV 프로그램 검색 결과\">\r\n            {tvResults.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.name}\r\n                rating={show.vote_average}\r\n                isMovie={false}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#c0392b\" text={error} />}\r\n        {tvResults &&\r\n        movieResults &&\r\n        tvResults.length === 0 &&\r\n        movieResults.length === 0 ? (\r\n          <Message color=\"#e84393\" text={\"원하시는 검색 결과가 없습니다.😥\"} />\r\n        ) : null}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    console.log(value);\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n\r\n      this.setState({ movieResults, tvResults });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: \"검색결과를 찾을 수 없습니다.\",\r\n      });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport { Loader } from \"../../Components/Loader\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../../Components/Message\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 30px;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  color: white;\r\n  font-size: 28px;\r\n  font-weight: 400;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst OverView = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.8;\r\n  line-height: 1.7;\r\n  widht: 50%;\r\n`;\r\n\r\nconst VideoContainer = styled.div`\r\n  margin-top: 35px;\r\n`;\r\n\r\nconst VideoBtn = styled.button`\r\n  background-color: #82ccdd;\r\n  width: 30%;\r\n  padding: 20px;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 4px;\r\n  transition: font-size 0.2s ease-in-out;\r\n`;\r\n\r\nconst VideoLink = styled.a`\r\n  color: white;\r\n  background-color: transparent;\r\n  &:hover {\r\n    color: #b33939;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n  }\r\n  transition: font-size 0.2s ease-in-out;\r\n`;\r\n\r\nconst ProductionCompanyContainer = styled.div`\r\n  width: 100%;\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst ProductCompany = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 200px);\r\n  grid-gap: 30px;\r\n  margin-bottom: 80px;\r\n`;\r\n\r\nconst ProductCompanyName = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  height: 100%;\r\n  transition: all 0.5s linear;\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nconst ProductCompnayImg = styled.img`\r\n  display: block;\r\n  margin: 30px auto;\r\n  width: 150px;\r\n  align: center;\r\n`;\r\n\r\nconst ProductCompanyTitle = styled.h1`\r\n  color: white;\r\n  font-size: 28px;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst GotoSeasonContainer = styled.div`\r\n  margin-top: 25px;\r\n`;\r\n\r\nconst GotoSeasonBtn = styled.button`\r\n  background-color: #82ccdd;\r\n  width: 30%;\r\n  padding: 20px;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst GotoSeason = styled.div`\r\n  color: white;\r\n  background-color: transparent;\r\n  &:hover {\r\n    color: #b33939;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n  }\r\n  transition: font-size 0.2s ease-in-out;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading, usResult }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | GiFlix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : error ? (\r\n    <Message color=\"#fdcb6e\" text=\"상세 정보를 찾을 수 업습니다.💦\" />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>{result.title ? result.title : result.name} | GiFlix</title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={\r\n          result.backdrop_path\r\n            ? `https://image.tmdb.org/t/p/original/${result.backdrop_path}`\r\n            : require(\"../../assets/noMovie.jpg\")\r\n        }\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original/${result.poster_path}`\r\n              : require(\"../../assets/noMovie.jpg\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>{result.title ? result.title : result.name}</Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time}분\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} 🤍 `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <OverView>{result.overview ? result.overview : \"\"}</OverView>\r\n          <VideoContainer>\r\n            <VideoBtn>\r\n              <VideoLink\r\n                key={result.id}\r\n                href={`https://www.youtube.com/watch?v=${usResult.videos.results.map(\r\n                  (result) => result.key\r\n                )}`}\r\n              >\r\n                티저 영상 보러가기\r\n              </VideoLink>\r\n            </VideoBtn>\r\n          </VideoContainer>\r\n\r\n          <ProductionCompanyContainer>\r\n            <ProductCompanyTitle>제작사</ProductCompanyTitle>\r\n            <ProductCompany>\r\n              {usResult.production_companies &&\r\n                usResult.production_companies.map((company, index) => (\r\n                  <>\r\n                    <ProductCompanyName>\r\n                      {company.name}\r\n                      <ProductCompnayImg\r\n                        key={result.id}\r\n                        src={\r\n                          company.logo_path\r\n                            ? `https://image.tmdb.org/t/p/w200${company.logo_path}`\r\n                            : require(\"../../assets/noMovie.jpg\")\r\n                        }\r\n                      ></ProductCompnayImg>\r\n                    </ProductCompanyName>\r\n                  </>\r\n                ))}\r\n            </ProductCompany>\r\n            {result.seasons ? (\r\n              <Link to={`/season/${result.id}`}>\r\n                <GotoSeasonContainer>\r\n                  <GotoSeasonBtn>\r\n                    <GotoSeason>시즌 보러가기</GotoSeason>\r\n                  </GotoSeasonBtn>\r\n                </GotoSeasonContainer>\r\n              </Link>\r\n            ) : null}\r\n          </ProductionCompanyContainer>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      usResult: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n    console.log(\">>>props: \", props);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n\r\n    const { isMovie } = this.state;\r\n    console.log(isMovie);\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    let usResult = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n        ({ data: usResult } = await moviesApi.movieDetailUs(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n        ({ data: usResult } = await tvApi.showDetailUs(parsedId));\r\n      }\r\n      console.log(\">>>results: \", result);\r\n    } catch {\r\n      this.setState({ error: \"결과를 찾을 수 없습니다.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result, usResult });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading, usResult } = this.state;\r\n    console.log(\">>>상세 데이터: \", this.state);\r\n    return (\r\n      <DetailPresenter\r\n        result={result}\r\n        error={error}\r\n        loading={loading}\r\n        usResult={usResult}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport { Loader } from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst SeasonContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst SeasonGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 150px);\r\n  grid-gap: 30px;\r\n`;\r\n\r\nconst SeasonTitle = styled.h1`\r\n  color: white;\r\n  font-size: 28px;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst SeasonImage = styled.img`\r\n  display: block;\r\n  margin: 30px auto;\r\n  width: 100%;\r\n  align: center;\r\n`;\r\n\r\nconst SeasonName = styled.span`\r\n  transition: opacity 0.4s linear;\r\n  &:hover {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst SeasonItem = styled.span`\r\n  display: block;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst SeaonPresenter = ({ result, error, loading, usResult }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>시즌 | Gilix</title>\r\n      </Helmet>{\" \"}\r\n      <Loader />\r\n    </>\r\n  ) : error ? (\r\n    <Message color=\"#fdcb6e\" text=\"시즌 정보를 찾을 수 없습니다.\" />\r\n  ) : (\r\n    <Container>\r\n      <Backdrop\r\n        bgImage={\r\n          result.backdrop_path\r\n            ? `https://image.tmdb.org/t/p/original/${result.backdrop_path}`\r\n            : require(\"../../assets/noMovie.jpg\")\r\n        }\r\n      />\r\n      <Content>\r\n        <SeasonContainer>\r\n          <SeasonTitle>{result.name} 시리즈</SeasonTitle>\r\n          <SeasonGrid>\r\n            {result.seasons &&\r\n              result.seasons.map((season, index) => (\r\n                <>\r\n                  <SeasonName>\r\n                    {season.name}\r\n                    <SeasonImage\r\n                      key={result.id}\r\n                      src={\r\n                        season.poster_path\r\n                          ? `https://image.tmdb.org/t/p/w200${season.poster_path}`\r\n                          : require(\"../../assets/noMovie.jpg\")\r\n                      }\r\n                    />\r\n                    <SeasonItem>\r\n                      {season.air_date && season.air_date.substring(0, 7)}\r\n                    </SeasonItem>\r\n                    <SeasonItem>\r\n                      {season.overview ? season.over_view : null}\r\n                    </SeasonItem>\r\n                    <SeasonItem>\r\n                      {season.episode_count\r\n                        ? `총 ${season.episode_count}편`\r\n                        : null}\r\n                    </SeasonItem>\r\n                  </SeasonName>\r\n                </>\r\n              ))}\r\n          </SeasonGrid>\r\n        </SeasonContainer>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nSeaonPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default SeaonPresenter;\r\n","import SeasonContainer from \"./SeasonContainer\";\r\n\r\nexport default SeasonContainer;\r\n","import React from \"react\";\r\nimport SeasonPresenter from \"./SeasonPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      usResult: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n    console.log(\">>>props: \", props);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n\r\n    const { isMovie } = this.state;\r\n    console.log(isMovie);\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    let usResult = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n        ({ data: usResult } = await moviesApi.movieDetailUs(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n        ({ data: usResult } = await tvApi.showDetailUs(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"결과를 찾을 수 없습니다.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result, usResult });\r\n    }\r\n  }\r\n  render() {\r\n    const { result, error, loading, usResult } = this.state;\r\n    console.log(\">>>상세 데이터: \", this.state);\r\n    return (\r\n      <SeasonPresenter\r\n        result={result}\r\n        error={error}\r\n        loading={loading}\r\n        usResult={usResult}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Header from \"Components/Header\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Season from \"Routes/Season\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home}></Route>\r\n        <Route path=\"/tv\" exact component={TV}></Route>\r\n        <Route path=\"/search\" component={Search}></Route>\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Route path=\"/season/:id\" component={Season} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\r\n        font-size: 16px;\r\n        background-color: #1e272e;\r\n        color: white;\r\n        padding-top: 50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}